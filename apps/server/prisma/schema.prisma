datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator dbml {
  provider = "prisma-dbml-generator"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex"]
}

model Org {
  id           String         @id @default(cuid())
  icon         String
  name         String
  userID       String
  users        UsersOnOrgs[]
  channels     Channel[]
  Role         Role[]
  UsersOnRoles UsersOnRoles[]

  @@map("orgs")
}

model Role {
  id           String         @id @default(cuid())
  name         String
  color        String
  orgID        String
  org          Org            @relation(fields: [orgID], references: [id])
  UsersOnRoles UsersOnRoles[]
  User         User?          @relation(fields: [userId], references: [id])
  userId       String?

  @@map("roles")
}

model User {
  id           String         @id @default(cuid())
  email        String         @unique
  password     String
  salt         String
  orgs         UsersOnOrgs[]
  fullName     String?
  Role         Role[]
  UsersOnRoles UsersOnRoles[]

  @@map("users")
}

model Channel {
  id    String @id @default(cuid())
  name  String
  orgID String
  Org   Org    @relation(fields: [orgID], references: [id])

  @@map("channels")
}

model UsersOnRoles {
  user   User    @relation(fields: [userId], references: [id])
  userId String
  role   Role    @relation(fields: [roleId], references: [id])
  roleId String
  Org    Org?    @relation(fields: [orgID], references: [id])
  orgID  String?

  @@id([roleId, userId])
  @@map("users_on_roles")
}

model UsersOnOrgs {
  user   User   @relation(fields: [userID], references: [id])
  userID String
  org    Org    @relation(fields: [orgID], references: [id])
  orgID  String

  @@id([orgID, userID])
  @@map("users_on_orgs")
}
